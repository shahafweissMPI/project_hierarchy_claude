% Default parameters for ironclust (default.prm)

% #Recording file format
vcFile = 'E:\2025\afm17365_241202_0_g0_imec0\\afm17365_241202_0_g0_tcat.imec0.ap.bin';			% Raw recording file path (leave empty if multiple files are sorted together)
csFile_merge = {};			% List of recording files to merge (leave empty if single file is used)
sort_file_merge = 1;			% Sort files by the 0: alphabetical order, 1: metafile, 2: file created time, 3: file modified time, 4: numerical order in the file names
vcFile_prm = 'Copy_of_afm17365_241202_0_g0_tcat.imec0.ap_IRC.prm';			% Current parameter file path (.prm) if left empty
template_file = '';			% Template parameter file path (.prm). Parameters in this file override the default parameter file (default.prm), but get overridden is by the parameter file.
probe_file = 'E:\2025\afm17365_241202_0_g0_imec0\IRC.prb';			% Probe file to use (.prb). Default search location: prb\
nChans = 385;			% # channels stored
vcDataType = 'int16';			% Raw data format. Choices: {'int16', 'uint16', 'int32', 'uint32', 'single', 'double'}
sRateHz = 30000;			% Sampling rate (Hz)
uV_per_bit = 12.6139;			% Bit scaling factor (uV/bit)
fTranspose_bin = 1;			% Set to 1 if the recording file is written in the channel order at different times
fInverse_file = 0;			% Set to 1 to flip the polarity of the signal
header_offset = 0;			% File header offset (set to 0 for files containing no header info (e.g. WHISPER format)

% #Execution parameters
version = 'v5.0.5';			% IronClust version
fVerbose = 1;			% Verbose flag, set to 0 to suppress displaying extra information 
fParfor = 1;			% Use Multiple CPU cores (if parallel processing toolbox is installed)
fGpu = 1;			% Use GPU if parallel processing toolbox is installed
fGpu_sort = 1;			% Use GPU for clustering if parallel processing toolbox is installed
fGpu_rho = 1;			% Use GPU for computing KNN and Rho
iGpu = 1;			% Use specific GPU ID (run 'gpuDevice()' to retrieve the list of GPUs)
MAX_BYTES_LOAD = [];			% Default memory loading block size (bytes)
MAX_LOAD_SEC = 2;			% Maximum loading duration (seconds). This overrides "MAX_BYTES_LOAD".
MAX_LOG = 2;			% Maximum number of histories to track for 'manual' GUI
nLoads_gpu = 14;			% Ratio of RAM to GPU memory. If your GPU memory is 12 GB and RAM is 96 GB, set nLoads_gpu = 8. Increase this number if you get GPU memory error.
vcFile_thresh = '';			% Name of .mat file taht stores the spike detection threshold in 'vnThresh_site' variable. Created by 'preview' GUI
sec_per_load_preview = 1;			% Recording duration (sec) per continuous segment to preview
nLoads_max_preview = 5;			% Number of time segments to load for preview
offset_sec_preview = 0;			% Time offset (sec) to apply to the preview
fCacheRam = 0;			% Cache spikew aveform information in RAM. Uses more RAM but faster
fRamCache = 0;			% Cache both raw and filtered spike waveforms in RAM (greater memory demand)
fSavePlot_RD = 0;			% Save the Rho-Delta plot as .png file (prefix: '_RD.png' at the end of the .prm file name)
vcAlgorithm = 'kilosort2';			% Number of supported algorithms: {'ironclust', 'kilosort', 'yass', 'mountainsort', 'spykingcircus'} 

% #Display parameters (Affects display only, (*):Can be modified in the manual GUI)edit 
tlim = [0, 0.25];			% Time range to display 
nTime_traces = 1;			% Number of time segments to display. Set to 1 to show one continuous time segment
nSkip_show = 1;			% Show 1 in n samples when plotting traces
fSpike_show = 1;			% show spikes in the trace view (*)
maxAmp = 250;			% Amplitude range in uV (initial setting, changeable in UI) (*)
nShow = 50;			% Maximum number of traces to show [D?# spikes to show]
corrLim = [0.5, 1];			% Correlation color plot range
nSpk_show = 10;			% show spike waveforms for manual clustering
nShow_proj = 2;			% Max. number of spikes to show in the projection view
vcFet_show = 'vpp';			% Feature to show in time plot {'vpp', 'cov', 'pca'} (*)
mrColor_proj = [0.75, 0.75, 0.75; 0, 0, 0; 1, 0, 0];			% background, selected, comparison color
vcFilter_show = 'bandpass';			% Filter to apply in the "traces" view. Choices: {'', 'bandpass', 'sgdiff'}. '' uses vcFilter setting.
fText = 0;			% Show spike count per unit (*, press 'n' to toggle in manual GUI)

% #Pre-processing (run "jrc spikesort" after change)
vcDataType_filter = 'single';			% Internal data representation after filtering
tlim_load = [];			% Time range to load in sec (uses all time range if set to empty)
vcFilter = 'bandpass';			% {'ndiff', 'sgdiff', 'bandpass', 'fir1', 'user', 'fftdiff', 'none'}
vcFilter_detect = 'wiener';			% Filter choice to run spike detection {'bandpass', 'wiener', 'matched', 'corr', 'xcov', 'banddiff'}
nDiff_filt = 3;			% Differentiation filter for vcFilter='sgdiff', ignored otherwise. Set to [] to disable. 2n+1 samples used for centered differentiation
freqLim = [300, 3000];			% Frequency cut-off limit for vcFilter='bandpass', ignored otherwise. to use high-pass set to [f_lo, nan], to use low-pass set to [nan, f_hi]
freqLim_detect = [400, 2000];			% Used by vcFilter_detect
freqLim_width = [100, 1250];			% Frequency transition width for the higher filter cutoff when 'bandpass' is used
filtOrder = 3;			% Bandpass filter order
fEllip = 0;			% Use Elliptic filter. set to 0 for Butterworth filter. Only valid for vcFilter='bandpass'.
vnFilter_user = [];			% User-specified filter kernel. Used if vcFilter='user' is set.
fft_thresh = 8;			% Automatically remove frequency outliers (unit:MAD, 10 recommended, 0 to disable). Verify by running "jrc traces" and press "p" to view the power spectrum.
fft_thresh_low = [];			% lower threshold for dual-threshold scheme. set to [] to disable dual thresholding. low threshold gets activated if it connects to the higher threshold
freqLimNotch = {};			% Notch filter frequency range to exclude manually. {[start1, end1], [start2, end2]}. Can be used in conjunction with fft_thresh.
vcCommonRef = 'whiten';			% common reference mode {'none', 'mean', 'median', 'whiten', 'whiten-mean', 'whiten-median'}
nSites_whiten = 16;			% number of sites to use local whtening (only active when vcCommonRef=`whiten`).
nChans_min_car = 8;			% minimum number of common average referencing
viSiteZero = [];			% Site# to ignore manually
viSiteExcl = 41;			% Site to exclude manually
nPad_filt = 30000;			%int16(sRateHz);			% Number of samples to overlap between multiple loading (filter edge safe).
thresh_corr_bad_site = 0.35;			% Automatically reject bad sites based on the max. correlation with neighboring sites using raw waveforms. Set to [] to disable
scale_filter = 8;			% filter multiplier for int16 interal representation (only used if vcDataType_filter='int16', otherwise set to 1)

% #Spike detection and grouping (run "jrc spikesort" after change)
vcDetect = 'min';			% Spike detection method. {'min', 'xcov'}
qqFactor = 5.2;			% Spike detection thresold (Threshold = qqFactor*S, S = median(abs(x-median(x)))/.6745). (RQ Quiroga'04).
qqSample = 1;			% Median subsample factor (1 every n)
spkThresh_uV = [];			% Manual threshold (applies to all channels)
spkThresh_max_uV = 2000;			% maximum absolute amp. allowed
spkLim_ms = [-0.5, 1.1];			% Time range to capture the filtered spike waveforms; spkLim = round(P.spkLim_ms/1000*P.sRateHz)
spkLim_raw_ms = [];			% Raw spike waveform range, setting to [] will use spkLim_raw_factor to determine spkLim_raw (# samples)
spkLim_raw_factor = 1;			% if spkLim_raw_ms==[] then spkLim_raw = spkLim * spkLim_raw_factor
spkRefrac_ms = 0.25;			% Detection refractory period in milliseconds
spkRefrac_merge_ms = 0.5;			% refractory period of merging
vcSpatialFilter = 'csd';			% Spatial filter for detection {'mean', 'imec2', 'subtract', 'csd'}
fSaveEvt = 1;			% Flag to save event file
fDetectBipolar = 0;			% bipolar amplitude detection (0 means negative)
fSaveRawSpk = 0;			% Save spike detected per site (saves minimum peak)
blank_thresh = 6;			% reject spikes exceeding the channel mean after filtering (MAD unit), ignored if [] or 0
blank_period_ms = 5;			% (miliseconds) Duration of blanking when the common mean exceeds a threhold (blank_thresh)
nneigh_min_detect = 1;			% Min. number of neighbors near the spike below threshold. choose between [0,1,2]
maxDist_site_um = 50;			% Radius of spike event merging. Keep spikes that has most negative peaks within x um radius.
maxDist_site_spk_um = 90;			% Max. radius for extracting waveforms. Used if maxSite=[] and nSites_ref=[]
fGroup_shank = 0;			% Group all sites in the same shank
fSave_spkwav = 1;			% Save spikewaveform (myparam_spkwav.jrc file)

% #Feature extraction (run "jrc spikesort" after change)
vcFet = 'gpca';			% Feature list: {'gpca', 'cov', 'vpp', 'vmin', 'vminmax', 'energy', 'pca', 'xcov'}
nPcPerChan = 3;			% number of principal components per chan.
vcSpkRef = 'none';			% Subtract mean of the spiking event sites {'nmean', 'none', 'time-mean'}
fInterp_fet = 1;			% Interpolate the waveforms for feature projection to find the optimal delay (2x interp). Set to 0 to disable
fRaw_feature = 1;			% Use raw waveform for feature extraction

% #Clustering (run "jrc sort" after change)
vcCluster = 'drift-knn';			% cluster method: {'spacetime', 'drift', 'drift2', 'drift-knn', 'wavcov'}, spacetime: spatiotemporal decentralized clustering that can handle slow drift; drift: fast drift clustering; wavcov: waveform covariance (creates nChans^2*nDelays_wavcov number of features)
knn = 50;			% K nearest neighbor clustering
nQuantile_drift = 8;			% Valid if vcCluster = 'drift'; # of bins for amplitude histogram per site to find drift pairs
nTime_clu = 16;%32			% number of time periods to perform separate clustering (later to be merged after clustering)
nTime_drift = [];			% divide to n drift time bins
nThreads = 128;			% number of GPU threads for clustering
batch_sec_drift = 600;%300			% batch duration in seconds. clustering time duration
step_sec_drift = 60;			%20% compute anatomical similarity every n sec
nBatch_max_drift = 32;			% max number of batch size

% #Post-cluster auto-merging parameters (run "jrc auto" after change)
min_count = 30;			% Minimum cluster size (min_count will be set to 2*#features if lower).
delta_cut = 1;			% Cutoff value for the Delta outlier in KNN-based Rodriguez-Laio clustering
knn_merge_thresh = 1;			% Number of spikes shared between two peaks to be merged
post_merge_mode = 1;			%1			% Automated merging mode
post_merge_mode0 = [12,19,18,17,4,15];			% Automated merging mode
maxWavCor = 0.98;			% merge if waveform correlation is greater than maxWavCor.
thresh_mad_clu = 6;			% This sets the MAD score threshold to remove outlier spikes for each cluster.
maxCluPerSite = 10;			% Maximum clusters per site allowed if local detrending is used.
spkLim_factor_merge = 1;			% Waveform range for computing the correlation. spkLim_factor_merge <= spkLim_raw_factor_merge. circa v3.1.8
frac_shift_merge = 0.1;			% Fraction of the waveform to shift to check for merging
fRemove_duplicate = 1;			% Remove clusters whose detection site occurs far from the min waveform site (d>=maxDist_site_um)
nInterp_merge = 1;			% Interpolation factor for the mean unit waveforms, set to 1 to disable
fWavRaw_merge = 1;			% Use raw average unit waveforms for merge when set to 1, if not use filtered waveforms.

% #Trial (used for plotting PSTH for each unit after clustering)
vcFile_trial = '';			% .mat or .csv file containing timestamp in seconds unit. use any variable name.
thresh_trial = [];			% Threshold to detect trial event timing from the TTL pulse. If empty, half between min and max is used.
tRefrac_trial = 0.001;			% Trial timestamp refractory period (sec), disable duplicate events
dinput_imec_trial = 1;			% IMEC digital input channel number (1-16) to generate trial file (vcFile_trial) using 'maketrial-imec' command.
nClu_show_trial = 10;			% Max # clusters to show for aux vs. firing rate correlation
max_events_trial = 100;			% Create 100 entries for the event channels
min_event_interval_trial = 1;			% Minimum event interval allowed when importing .nev file. Set to 0 to disable it
nSmooth_aux_trial = 500;			% number of points to smooth aux. channel

% PSTH info
tlim_psth = [-1, 5];			% Time range to display PSTH (in seconds)
tbin_psth = 0.01;			% Time bin for the PSTH histogram (in seconds)
xtick_psth = 0.2;			% PSTH time tick mark spacing
fAverageTrial_psth = 1;			% Plot PSTH for averaged trial if set to 1, otherwise plot individual trials (opens multiple tabs)
rateLim_psth = [];			% range range in Hz
min_interval_psth = 0.01;			% Minimum time interval for PSTH trigger in sec

% #Firing rate estimation for unit
sRateHz_rate = 1000;			% Resampled rate for the firing rate
filter_sec_rate = 2;			% Time period to determine the firing rate
filter_shape_rate = 'triangle';			% {'triangle', 'rectangle'} kernel shape for temporal averaging

% #LFP
vcFile_lfp = '';			% LFP file
sRateHz_lfp = 2500;			% Target LFP sampling rate (Hz)
nSkip_lfp = 12;			% downsample factor used to determine sRateHz_lfp if sRateHz_lfp==[]



%--------------------------------------------------------------------------
% Developer's section

% Record Keeping
vcDate_file = '23-Jul-2025 11:56:04';			% date string. e.g. '19-May-2016 13:02:18'
nBytes_file = 1458165140740;			% file byte size
duration_file = 63124;			% recording duration in seconds

% Ground truth
vcFile_gt = '';			% Ground truth file. Default: *_gt.mat. @TODO: Specify the format
fPlot_gt = 0;			% Plot groundtruth 
% snr_thresh_gt = 6;            % Refer to default.cfg

% Unit/dipole tracking
um_per_pix = 20;			
nPc_dip = 3;			% Number of principal components for dipole fitting

% depth tracking
vcMode_track = 'mt_cpsd2_mr';			% LFP tracking method {'mt_psd_mr', 'mt_cpsd_mr', 'cpsd_mr', 'corr_mr', 'mt_cpsd1_mr', 'mt_fft_mr', 'mt_cpsd2_mr', 'mt_cpsd1_mr', 'mt_dpsd_mr'}
tBin_track = 9;			% Duration (sec) per bin
freqLim_track = [15, 150];			% Filter range
freqLim_excl_track = [48, 52];			% Filter range to exclude. Change this for Europe
thresh_corr_track = [];			% Deprecated. correlation drop-off
viDepth_track = [];			% Range of sites to track. set to empty to ignore
fUseCache_track = 0;			% Use pre-stored result
maxSite_track = [2, 3, 4, 5, 6, 7, 8];			% maximum distance for a site pair
nw_lcm_track = 1;			% number of windows for local center of mass 
max_shift_track = [];			% maximum shift distance per bin
fSingleColumn_track = 1;			% Disable by default
viSite_bad_track = [];			% Sites to ignore
pix_per_sec_track = [];			% Descent experiment speed
load_fraction_track = [];			% Fraction of data to load for tracking
viDepth_excl_track = [];			% Depth point to ignore
fSmooth_track = 1;			% Smooth depth tracking result
fUseLfp_track = 1;			% Use LFP info for tracking. set to 0 to use AP band

% Drift correction
cvrDepth_drift = {};			% Time range (s) and depth to correct manually
tbin_drift = [];			% drift correcting time step in sec. Set to empty to skip drift correction
nT_drift = [];			% Number of time steps for drift correction. Set to empty to skip drift correction
ybin_drift = 2;			% drift correcting depth step in um

% Export options
scale_export = 200;			% scale factor to export data as int16


%--------------------------------------------------------------------------
% Deprecated

% Recording file format
viChan_bin = [];			% channel translation order for bin file [D]
viChan_aux = [];			% aux and sync channels [D]
cviShank = {};			% Shank channel group [D]

% Display parameters
LineStyle = '';			% Line style string [D]
fShowAllSites = 0;			% Show mean traces from all sites [D]
fAddCommonRef = 0;			% Add common ref [D]
iClu_show = [];			% cluster to display %show all by default [D]
maxSite_show = [];			% uses maxSite if empty.  [D]
tlim_lfp = [0, 5];			% lfp viewing range [D]
maxAmp_lfp = 1000;			% Amplitude range in uV (LFP) [D]
freqLim_corr = [15, 150];			% LFP correlation frequency limit [D]
time_tick_show = [];			% Time interval tick marks in secondds, [] for auto [D]
viChan_show = [];			% Show all if empty [D]
fWav_raw_show = 1;			% Show raw waveform (0 to show filtered); [D]

% Pre-processing
nSites_excl_ref = 6;			% excl three nearest sites when perfomaing 'nmean' local referencing [D]
thresh_sd_ref = 5;			% local common referencing threshold (SD) [D]
fSaveSpk = 1;			% flag to save .spk file (large binary) [D]
freqLim_lfp = [];			% LFP filter range in Hz. [#] for lowpass and [#,#] for bandpass [D?]
freqLimNotch_lfp = [];			% Notch filter for LFP band [D?]
fWhiten_traces = 0;			% Apply whitening of the traces after filtering. (kilosort and spykingcircus use this). [D?]
nSkip_whiten = 10;			% use 1 of n for whitening calculation [D?]
fLoad_lfp = 0;			% Load LFP file [D?]
S_imec3 = [];			% imec3 struct [D]
fMeanSite = 1;			% Subtract background noise (mean across sites, nSite=4*maxSite); [D]
fMeanSite_drift = 0;			% Average nearest vertical neighbors (top and down) [D]
fCheckSites = 1;			% Automatically reject bad sites if set to 1
maxLfpSdZ = 4.5;			% site rejection threshold (valid if fCheckSites=1)
%gain_boost = 1;             % multiply the raw recording by this gain to boost uV per bit

% Spike detection and grouping
fPcaDetect = 0;			% Detect spikes after projecting waveform in 1st prin. vec.
fRms_detect = 0;			% don't use rms filter for detection if selectec
rms_filt_ms = 0;			% RMS filter for spike detection. Set to 0 to ignore
maxSite_detect = 1.5;			% Max site to sum neighboring channels for detection
refrac_factor = 2;			% Refractory period for the same channel  (spkRefrac_ms x refrac_factor)

% Feature extraction
slopeLim_ms = [0.05, 0.35];			% Slope feature parameter
spkLim_ms_fet = [-0.25, 1];			% Spike waveform time range
maxSite_fet = [];			% 2*n number of nearest neighbors for merging
nMinAmp_ms = 0;			% Amplitude minimum search range
fRejectSpk_vpp = 0;			% Reject spikes exceedign 2 * thresh
fMinNorm_wav = 0;			% Normalize by min value at max site

% Clustering
dc_frac = [];			
dc_factor = 1;			% higher: merge more, lower: split more
tlim_clu = [];			% time range to cluster, referenced from tlim_load in sec
vcCluDist = 'eucldist';			% Distance: {'neucldist_offset', 'nmaxdist_offset', 'nmaxdist', 'corrdist', 'neucldist', 'eucldist'};
fMeanSiteRef = 0;			% Subtract by mean 
maxSite_sort = [];			% max site distance to compare cluster membership
maxSite_merge = [];			% Number of sites (2n+1) to merge based on waveform similarity
vcDc_clu = 'distr';			% use noise distribution to determine cutoff {noise, distr, entropy, otsu}
fProj_sort = 0;			% PCA project from PCA
fNormRhoDelta = 1;			% remove spikes in delta dimension if set
delta1_cut = 0.6;			% RL cluster: delta cut-off. Increasing this will produce less clusters.
rho_cut = -2.5;			% RL cluster: rho cut-off. Decreasing (more negative) this will produce more clusters.

% Post-cluster parameters (run "jrc auto" after change)
thresh_merge_clu = 0;			% Pierre Yger's cluster merging criterial based on medium projection of cluster pairs
thresh_automerge_pca = [];			% posthoc merge based on the eigvec similarity. recommends .998
thresh_split_clu = 0;			% Split a cluster to two if separation distance > (x) after k-means clustering
fDiscard_count = 1;			% Discard cluster under minimum count. set to zero to absorb to the nearest cluster
vcCluWavMode = 'median';			% use median to compute average cluster waveform
frac_equal_knn = 0.5;			% Fraction of k-nearest neighbors from the same cluster. 

% Batch process parameters
fProcessReverseOrder = 0;			
fProcessOdd = 0;			
fProcessEven = 0;			
fRun = 1;			% Run the job for batch

% Trial
vcFile_vid = '';			% video file
iChan_vid = [];			% video sync channel, zero-based
flim_vid = [];			% used for video sync, video frame #
tlim_vid = [];			% used for video sync, ephys time
vcFile_bonsai = '';			% bonsai 5-column output (x,y are 2 and 3)

% Cluster
%nPos_Drift = 64;           % number of position bins to compute the spike count histogram
%dc_percent = 2;             % used for distribution cutting
%fRepeat_clu = 0;            % Flag for whether to repeat clustering for the bottom half of the cluster amplitudes.
%min_sites_mask = 5;         % Minimum number of sites to have to apply spatial mask. Used if fSpatialMask_clu==1. circa v3.1.10
%nDelays_xcov = 4;           % Used for vcCluster='xcov'. Number of delays for channel-pair covariance 

% post-merge
%vcDetrend_postclu = 'global'; % 'none', 'hidehiko', 'global', 'local', 'logz'
%nRepeat_merge = 15;         % # of repeats for average unit raw waveform based merging
%nTemplates_clu = 100;       % Number of template waveforms per cluster to perform post-hoc merging and cluster assignment on the outer edge of clusters
%thresh_core_knn = .8;      % Fraction of KNN from the same cluster to be considered as the core member of a cluster
viSite2Chan = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 131, 133, 135, 137, 139, 141, 143, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 145, 289, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 383, 381, 379, 377, 375, 373, 371, 369, 367, 365, 363, 361, 359, 357, 355, 353, 351, 349, 347, 345, 343, 341, 339, 337, 287, 285, 283, 281, 279, 277, 275, 273, 271, 269, 267, 265, 263, 261, 259, 257, 255, 253, 251, 249, 247, 245, 243, 241, 191, 189, 187, 185, 183, 181, 179, 177, 175, 173, 171, 169, 167, 165, 163, 161, 159, 157, 155, 153, 151, 149, 147, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 242, 244, 246, 248, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 286, 288, 338, 340, 291, 100, 98, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 192, 190, 188, 186, 184, 182, 180, 178, 176, 174, 172, 170, 168, 166, 164, 162, 160, 158, 156, 154, 152, 150, 148, 146, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 384, 382, 380, 378, 376, 374, 372, 370, 368, 366, 364, 362, 360, 358, 356, 354, 352, 350, 348, 346, 344, 342, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335];			
mrSiteXY = [527, 720; 527, 735; 527, 750; 527, 765; 527, 780; 527, 795; 527, 810; 527, 825; 527, 840; 527, 855; 527, 870; 527, 885; 527, 900; 527, 915; 527, 930; 527, 945; 527, 960; 527, 975; 527, 990; 527, 1005; 527, 1020; 527, 1035; 527, 1050; 527, 1065; 527, 1080; 527, 1095; 527, 1110; 527, 1125; 527, 1140; 527, 1155; 527, 1170; 527, 1185; 527, 1200; 527, 1215; 527, 1230; 527, 1245; 527, 1260; 527, 1275; 527, 1290; 527, 1305; 527, 1335; 527, 1350; 527, 1365; 527, 1380; 527, 1395; 527, 1410; 527, 1425; 527, 1440; 527, 1455; 527, 1470; 527, 1485; 527, 1500; 527, 1515; 527, 1530; 527, 1545; 527, 1560; 527, 1575; 527, 1590; 527, 1605; 527, 1620; 527, 1635; 527, 1650; 527, 1665; 527, 1680; 527, 1695; 527, 1710; 527, 1725; 527, 1740; 527, 1755; 527, 1770; 527, 1785; 527, 1800; 277, 1800; 277, 1785; 277, 1770; 277, 1755; 277, 1740; 277, 1725; 277, 1710; 277, 1695; 277, 1680; 277, 1665; 277, 1650; 277, 1635; 277, 1620; 277, 1605; 277, 1590; 277, 1575; 277, 1560; 277, 1545; 277, 1530; 277, 1515; 277, 1500; 277, 1485; 277, 1470; 277, 1455; 277, 1440; 277, 1425; 277, 1410; 277, 1395; 277, 1380; 277, 1365; 277, 1350; 277, 1335; 277, 1320; 277, 1305; 277, 1290; 277, 1275; 277, 1260; 277, 1245; 277, 1230; 277, 1215; 277, 1200; 277, 1185; 277, 1170; 277, 1155; 277, 1140; 277, 1125; 277, 1110; 277, 1095; 277, 1080; 277, 1065; 277, 1050; 277, 1035; 277, 1020; 277, 1005; 277, 990; 277, 975; 277, 960; 277, 945; 277, 930; 277, 915; 277, 900; 277, 885; 277, 870; 277, 855; 277, 840; 277, 825; 277, 810; 277, 795; 277, 780; 277, 765; 277, 750; 277, 735; 277, 720; 277, 705; 277, 690; 277, 675; 277, 660; 277, 645; 277, 630; 277, 615; 277, 600; 277, 585; 277, 570; 277, 555; 277, 540; 277, 525; 277, 510; 277, 495; 277, 480; 277, 465; 277, 450; 277, 435; 277, 420; 277, 405; 277, 390; 277, 375; 59, 390; 59, 405; 59, 420; 59, 435; 59, 450; 59, 465; 59, 480; 59, 495; 59, 510; 59, 525; 59, 540; 59, 555; 59, 570; 59, 585; 59, 600; 59, 615; 59, 630; 59, 645; 59, 660; 59, 675; 59, 690; 59, 705; 59, 720; 59, 735; 59, 750; 59, 765; 59, 780; 59, 795; 59, 810; 59, 825; 59, 840; 59, 855; 59, 870; 59, 885; 59, 900; 59, 915; 59, 930; 59, 945; 59, 960; 59, 975; 59, 990; 59, 1005; 59, 1020; 59, 1035; 59, 1050; 59, 1065; 59, 1080; 59, 1095; 59, 1110; 59, 1125; 59, 1140; 59, 1155; 59, 1170; 59, 1185; 59, 1200; 59, 1215; 59, 1230; 59, 1245; 59, 1260; 59, 1275; 59, 1290; 59, 1305; 59, 1320; 59, 1335; 59, 1350; 59, 1365; 59, 1380; 59, 1395; 59, 1410; 59, 1425; 59, 1440; 59, 1455; 59, 1470; 59, 1485; 59, 1500; 59, 1515; 59, 1530; 59, 1545; 59, 1560; 59, 1575; 59, 1590; 59, 1605; 59, 1620; 59, 1635; 59, 1650; 59, 1665; 59, 1680; 59, 1695; 59, 1710; 59, 1725; 59, 1740; 59, 1755; 59, 1770; 59, 1785; 59, 1800; 59, 1815; 277, 1815; 809, 1815; 809, 1800; 809, 1785; 809, 1770; 809, 1755; 809, 1740; 809, 1725; 809, 1710; 809, 1695; 809, 1680; 809, 1665; 809, 1650; 809, 1635; 809, 1620; 809, 1605; 809, 1590; 809, 1575; 809, 1560; 809, 1545; 809, 1530; 809, 1515; 809, 1500; 809, 1485; 809, 1470; 809, 1455; 809, 1440; 809, 1425; 809, 1410; 809, 1395; 809, 1380; 809, 1365; 809, 1350; 809, 1335; 809, 1320; 809, 1305; 809, 1290; 809, 1275; 809, 1260; 809, 1245; 809, 1230; 809, 1215; 809, 1200; 809, 1185; 809, 1170; 809, 1155; 809, 1140; 809, 1125; 809, 1110; 809, 1095; 809, 1080; 809, 1065; 809, 1050; 809, 1035; 809, 1020; 809, 1005; 809, 990; 809, 975; 809, 960; 809, 945; 809, 930; 809, 915; 809, 900; 809, 885; 809, 870; 809, 855; 809, 840; 809, 825; 809, 810; 809, 795; 809, 780; 809, 765; 809, 750; 809, 735; 809, 720; 809, 705; 809, 690; 809, 675; 809, 660; 809, 645; 809, 630; 809, 615; 809, 600; 809, 585; 809, 570; 809, 555; 809, 540; 809, 525; 809, 510; 809, 495; 809, 480; 809, 465; 809, 450; 809, 435; 809, 420; 809, 405; 809, 390; 527, 390; 527, 405; 527, 420; 527, 435; 527, 450; 527, 465; 527, 480; 527, 495; 527, 510; 527, 525; 527, 540; 527, 555; 527, 570; 527, 585; 527, 600; 527, 615; 527, 630; 527, 645; 527, 660; 527, 675; 527, 690; 527, 705];			
vrSiteHW = [12, 12];			
viShank_site = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];			
distances = 15;			
idx = [1; 3; 5; 7; 9; 11; 13; 15; 17; 19; 21; 23; 25; 27; 29; 31; 33; 35; 37; 39; 41; 43; 45; 47; 97; 99; 101; 103; 105; 107; 109; 111; 113; 115; 117; 119; 121; 123; 125; 127; 129; 131; 133; 135; 137; 139; 141; 143; 49; 51; 53; 55; 57; 59; 61; 63; 65; 67; 69; 71; 73; 75; 77; 79; 81; 83; 85; 87; 89; 91; 93; 95; 145; 289; 239; 237; 235; 233; 231; 229; 227; 225; 223; 221; 219; 217; 215; 213; 211; 209; 207; 205; 203; 201; 199; 197; 195; 193; 383; 381; 379; 377; 375; 373; 371; 369; 367; 365; 363; 361; 359; 357; 355; 353; 351; 349; 347; 345; 343; 341; 339; 337; 287; 285; 283; 281; 279; 277; 275; 273; 271; 269; 267; 265; 263; 261; 259; 257; 255; 253; 251; 249; 247; 245; 243; 241; 191; 189; 187; 185; 183; 181; 179; 177; 175; 173; 171; 169; 167; 165; 163; 161; 159; 157; 155; 153; 151; 149; 147; 102; 104; 106; 108; 110; 112; 114; 116; 118; 120; 122; 124; 126; 128; 130; 132; 134; 136; 138; 140; 142; 144; 194; 196; 198; 200; 202; 204; 206; 208; 210; 212; 214; 216; 218; 220; 222; 224; 226; 228; 230; 232; 234; 236; 238; 240; 290; 292; 294; 296; 298; 300; 302; 304; 306; 308; 310; 312; 314; 316; 318; 320; 322; 324; 326; 328; 330; 332; 334; 336; 242; 244; 246; 248; 250; 252; 254; 256; 258; 260; 262; 264; 266; 268; 270; 272; 274; 276; 278; 280; 282; 284; 286; 288; 338; 340; 291; 100; 98; 48; 46; 44; 42; 40; 38; 36; 34; 32; 30; 28; 26; 24; 22; 20; 18; 16; 14; 12; 10; 8; 6; 4; 2; 192; 190; 188; 186; 184; 182; 180; 178; 176; 174; 172; 170; 168; 166; 164; 162; 160; 158; 156; 154; 152; 150; 148; 146; 96; 94; 92; 90; 88; 86; 84; 82; 80; 78; 76; 74; 72; 70; 68; 66; 64; 62; 60; 58; 56; 54; 52; 50; 384; 382; 380; 378; 376; 374; 372; 370; 368; 366; 364; 362; 360; 358; 356; 354; 352; 350; 348; 346; 344; 342; 293; 295; 297; 299; 301; 303; 305; 307; 309; 311; 313; 315; 317; 319; 321; 323; 325; 327; 329; 331; 333; 335];			
k = 384;			
lastPoint = [527, 690];			
minLoc = 1;			
numPoints = 384;			
orderedIdx = [1; 3; 5; 7; 9; 11; 13; 15; 17; 19; 21; 23; 25; 27; 29; 31; 33; 35; 37; 39; 41; 43; 45; 47; 97; 99; 101; 103; 105; 107; 109; 111; 113; 115; 117; 119; 121; 123; 125; 127; 129; 131; 133; 135; 137; 139; 141; 143; 49; 51; 53; 55; 57; 59; 61; 63; 65; 67; 69; 71; 73; 75; 77; 79; 81; 83; 85; 87; 89; 91; 93; 95; 145; 289; 239; 237; 235; 233; 231; 229; 227; 225; 223; 221; 219; 217; 215; 213; 211; 209; 207; 205; 203; 201; 199; 197; 195; 193; 383; 381; 379; 377; 375; 373; 371; 369; 367; 365; 363; 361; 359; 357; 355; 353; 351; 349; 347; 345; 343; 341; 339; 337; 287; 285; 283; 281; 279; 277; 275; 273; 271; 269; 267; 265; 263; 261; 259; 257; 255; 253; 251; 249; 247; 245; 243; 241; 191; 189; 187; 185; 183; 181; 179; 177; 175; 173; 171; 169; 167; 165; 163; 161; 159; 157; 155; 153; 151; 149; 147; 102; 104; 106; 108; 110; 112; 114; 116; 118; 120; 122; 124; 126; 128; 130; 132; 134; 136; 138; 140; 142; 144; 194; 196; 198; 200; 202; 204; 206; 208; 210; 212; 214; 216; 218; 220; 222; 224; 226; 228; 230; 232; 234; 236; 238; 240; 290; 292; 294; 296; 298; 300; 302; 304; 306; 308; 310; 312; 314; 316; 318; 320; 322; 324; 326; 328; 330; 332; 334; 336; 242; 244; 246; 248; 250; 252; 254; 256; 258; 260; 262; 264; 266; 268; 270; 272; 274; 276; 278; 280; 282; 284; 286; 288; 338; 340; 291; 100; 98; 48; 46; 44; 42; 40; 38; 36; 34; 32; 30; 28; 26; 24; 22; 20; 18; 16; 14; 12; 10; 8; 6; 4; 2; 192; 190; 188; 186; 184; 182; 180; 178; 176; 174; 172; 170; 168; 166; 164; 162; 160; 158; 156; 154; 152; 150; 148; 146; 96; 94; 92; 90; 88; 86; 84; 82; 80; 78; 76; 74; 72; 70; 68; 66; 64; 62; 60; 58; 56; 54; 52; 50; 384; 382; 380; 378; 376; 374; 372; 370; 368; 366; 364; 362; 360; 358; 356; 354; 352; 350; 348; 346; 344; 342; 293; 295; 297; 299; 301; 303; 305; 307; 309; 311; 313; 315; 317; 319; 321; 323; 325; 327; 329; 331; 333; 335];			
remainingIdx = [];			
spkRefrac = 8;			
		
miSites			
nSites_fet = 7;			
bytesPerSample = 2;			
spkThresh = [];			
nC_max = 45;			
